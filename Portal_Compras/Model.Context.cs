//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Portal_Compras
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EntitiesBarEscola : DbContext
    {
        public EntitiesBarEscola()
            : base("name=EntitiesBarEscola")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BUY_PRODUCTS> BUY_PRODUCTS { get; set; }
        public virtual DbSet<BUYS> BUYS { get; set; }
        public virtual DbSet<CLIENT> CLIENT { get; set; }
        public virtual DbSet<Discount> Discount { get; set; }
        public virtual DbSet<Product> Product { get; set; }
        public virtual DbSet<TYPE> TYPE { get; set; }
    
        public virtual int ApplyDiscounts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ApplyDiscounts");
        }
    
        public virtual ObjectResult<GET_PRODUCTS_Result> GET_PRODUCTS(Nullable<int> id_product)
        {
            var id_productParameter = id_product.HasValue ?
                new ObjectParameter("id_product", id_product) :
                new ObjectParameter("id_product", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_PRODUCTS_Result>("GET_PRODUCTS", id_productParameter);
        }
    
        public virtual ObjectResult<GetFilteredProducts_Result> GetFilteredProducts(string searchText, Nullable<bool> searchDesc)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var searchDescParameter = searchDesc.HasValue ?
                new ObjectParameter("SearchDesc", searchDesc) :
                new ObjectParameter("SearchDesc", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFilteredProducts_Result>("GetFilteredProducts", searchTextParameter, searchDescParameter);
        }
    }
}
