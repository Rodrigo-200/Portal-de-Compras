<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="chb_showPassword.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>